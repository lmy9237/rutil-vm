status = error
name = rutil-vm-log-local60

# ==================== { 1. property 설정 } =========================
property.appName                        = rutil-vm
property.layoutPattern                  = %d{yyyy-MM-dd HH:mm:ss} %-5p : %c.%M(%F:%L) %-80m %n
property.layoutPatternColor             = [%clr{%d{yyyy-MM-dd HH:mm:ss}}{faint}] %highlight{-%5p ${sys:PID} --- %-60.60c.%M(%F:%L) :}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green bold, DEBUG=cyan, TRACE=blue} %m%n%xwEx
property.layoutPatternColor2            = %highlight{%d{HH:mm:ss.SSS} %-5level %logger{36}.%M() @%L - %msg%n}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green bold, DEBUG=cyan, TRACE=blue}
property.logPath                        = logs
# property.layoutPattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %80m %n

# ==================== { 2. rolling 규칙 설정 } =========================
appenders = stdout, file

appender.stdout.type                     = Console
appender.stdout.name                     = STDOUT
appender.stdout.layout.type              = PatternLayout
appender.stdout.layout.pattern           = ${layoutPatternColor}
appender.stdout.layout.charset           = UTF-8
appender.stdout.layout.disableAnsi       = false
appender.stdout.filter.threshold.type    = ThresholdFilter
appender.stdout.filter.threshold.level   = debug


appender.file.type                        = RollingFile
appender.file.name                        = FILE
appender.file.layout.type                 = PatternLayout
appender.file.layout.pattern              = ${layoutPattern}
appender.file.layout.charset              = UTF-8
appender.file.filter.threshold.type       = ThresholdFilter
appender.file.filter.threshold.level      = debug
appender.file.fileName                    = ${logPath}/${appName}.log
appender.file.filePattern                 = ${logPath}/${appName}_%d{yyyyMMdd}.log.gz
appender.file.policies.type               = Policies
# appender.file.policies.size.type          = SizeBasedTriggeringPolicy
# appender.file.policies.size.size          = 20MB
appender.file.policies.time.type          = TimeBasedTriggeringPolicy
appender.file.policies.time.interval      = 1
appender.file.policies.time.modulate      = true
appender.file.strategy.type               = DefaultRolloverStrategy
appender.file.strategy.delete.type        = Delete
appender.file.strategy.delete.basePath    = ${logPath}
appender.file.strategy.delete.maxDepth    = 10
appender.file.strategy.delete.ifLastModified.type = IfLastModified
appender.file.strategy.delete.ifLastModified.age = 30d


# ==================== { 3. loggers 설정 } ====================
loggers = spring, app

logger.spring.name                      = org.springframework
logger.spring.level                     = info
logger.spring.additivity                = false
logger.spring.appenderRefs              = file, stdout
logger.spring.appenderRef.file.ref      = FILE
logger.spring.appenderRef.stdout.ref    = STDOUT

logger.app.name                         = com.itinfo.rutilvm
logger.app.level                        = debug
logger.app.additivity                   = false
logger.app.appenderRefs                 = file, stdout
logger.app.appenderRef.file.ref         = FILE
logger.app.appenderRef.stdout.ref       = STDOUT


# rootLogger
#
rootLogger.level = info
rootLogger.appenderRef = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
