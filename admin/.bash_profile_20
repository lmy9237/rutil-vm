# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
  . ~/.bashrc
fi

export PATH_ENGINE_ID_RSA=/etc/pki/ovirt-engine/keys/engine_id_rsa

# RHV-M Certificates
function certsCheck() {
    # 인증서 검사
    echo "This script will check certificate expiration dates"
    echo
    echo "Checking RHV-M Certificates..."
    echo "=================================================";
    ca=`openssl x509 -in /etc/pki/ovirt-engine/ca.pem -noout -enddate| cut -d= -f2`
    apache=`openssl x509 -in /etc/pki/ovirt-engine/certs/apache.cer -noout -enddate| cut -d= -f2`
    engine=`openssl x509 -in /etc/pki/ovirt-engine/certs/engine.cer -noout -enddate| cut -d= -f2`
    qemu=`openssl x509 -in /etc/pki/ovirt-engine/qemu-ca.pem -noout -enddate| cut -d= -f2`
    wsp=`openssl x509 -in /etc/pki/ovirt-engine/certs/websocket-proxy.cer -noout -enddate| cut -d= -f2`
    jboss=`openssl x509 -in /etc/pki/ovirt-engine/certs/jboss.cer -noout -enddate| cut -d= -f2`
    ovn=`openssl x509 -in /etc/pki/ovirt-engine/certs/ovirt-provider-ovn.cer -noout -enddate| cut -d= -f2`
    ovnnbd=`openssl x509 -in /etc/pki/ovirt-engine/certs/ovn-ndb.cer -noout -enddate| cut -d= -f2`
    ovnsbd=`openssl x509 -in /etc/pki/ovirt-engine/certs/ovn-sdb.cer -noout -enddate| cut -d= -f2`
    vmhelper=`openssl x509 -in /etc/pki/ovirt-engine/certs/vmconsole-proxy-helper.cer -noout -enddate| cut -d= -f2`
    vmhost=`openssl x509 -in /etc/pki/ovirt-engine/certs/vmconsole-proxy-host.cer -noout -enddate| cut -d= -f2`
    vmuser=`openssl x509 -in /etc/pki/ovirt-engine/certs/vmconsole-proxy-user.cer -noout -enddate| cut -d= -f2`

    echo "  /etc/pki/ovirt-engine/ca.pem:                          $ca"
    echo "  /etc/pki/ovirt-engine/certs/apache.cer:                $apache"
    echo "  /etc/pki/ovirt-engine/certs/engine.cer:                $engine"
    echo "  /etc/pki/ovirt-engine/qemu-ca.pem                      $qemu"
    echo "  /etc/pki/ovirt-engine/certs/websocket-proxy.cer        $wsp"
    echo "  /etc/pki/ovirt-engine/certs/jboss.cer                  $jboss"
    echo "  /etc/pki/ovirt-engine/certs/ovirt-provider-ovn         $ovn"
    echo "  /etc/pki/ovirt-engine/certs/ovn-ndb.cer                $ovnnbd" 
    echo "  /etc/pki/ovirt-engine/certs/ovn-sdb.cer                $ovnsbd"
    echo "  /etc/pki/ovirt-engine/certs/vmconsole-proxy-helper.cer $vmhelper"
    echo "  /etc/pki/ovirt-engine/certs/vmconsole-proxy-host.cer   $vmhost"
    echo "  /etc/pki/ovirt-engine/certs/vmconsole-proxy-user.cer   $vmuser"

    echo

    hosts=`/usr/share/ovirt-engine/dbscripts/engine-psql.sh -t -c "select vds_name from vds;" | xargs`
    echo
    echo "Checking Host Certificates..."
    echo

    for i in $hosts;
        do echo "Host: $i";
        echo "=================================================";
        vdsm=`ssh -i  $PATH_ENGINE_ID_RSA root@${i} 'openssl x509 -in /etc/pki/vdsm/certs/vdsmcert.pem -noout -enddate' | cut -d= -f2`
        echo -e "  /etc/pki/vdsm/certs/vdsmcert.pem:              $vdsm";

        spice=`ssh -i  $PATH_ENGINE_ID_RSA root@${i} 'openssl x509 -in /etc/pki/vdsm/libvirt-spice/server-cert.pem -noout -enddate' | cut -d= -f2`
        echo -e "  /etc/pki/vdsm/libvirt-spice/server-cert.pem:   $spice";

        vnc=`ssh -i  $PATH_ENGINE_ID_RSA root@${i} 'openssl x509 -in /etc/pki/vdsm/libvirt-vnc/server-cert.pem -noout -enddate' | cut -d= -f2`
        echo -e "  /etc/pki/vdsm/libvirt-vnc/server-cert.pem:     $vnc";

        libvirt=`ssh -i  $PATH_ENGINE_ID_RSA root@${i} 'openssl x509 -in /etc/pki/libvirt/clientcert.pem -noout -enddate' | cut -d= -f2`
        echo -e "  /etc/pki/libvirt/clientcert.pem:               $libvirt";

        migrate=`ssh -i  $PATH_ENGINE_ID_RSA root@${i} 'openssl x509 -in /etc/pki/vdsm/libvirt-migrate/server-cert.pem -noout -enddate' | cut -d= -f2`
        echo -e "  /etc/pki/vdsm/libvirt-migrate/server-cert.pem: $migrate";

        echo;
        echo;
    done
}

export DOCKER_COMPOSE_FILENAME=deploy-local-20.yaml
PATH=$PATH:$HOME/bin
export RUTIL_VM_HOME=$HOME/rutil-vm
export PATH

# User specific environment and startup programs
export DOCKER_REGISTRY_HOME=ititinfo.synology.me:50951/ititcloud
# export DOCKER_IMG_RUTIL_VM_API=$DOCKER_REGISTRY_HOME/ititcloud/rutil-vm-api
export DOCKER_IMG_RUTIL_VM_API=rutil-vm-api
export DOCKER_IMG_RUTIL_VM_API_VERSION=0.3.8
export DOCKER_IMG_RUTIL_VM_API_CURRENT=$DOCKER_IMG_RUTIL_VM_API:$DOCKER_IMG_RUTIL_VM_API_VERSION
export DOCKER_IMG_RUTIL_VM_API_LATEST=$DOCKER_IMG_RUTIL_VM_API:latest

# export DOCKER_IMG_RUTIL_VM=$DOCKER_REGISTRY_HOME/ititcloud/rutil-vm
export DOCKER_IMG_RUTIL_VM=rutil-vm
export DOCKER_IMG_RUTIL_VM_CURRENT=$DOCKER_IMG_RUTIL_VM:$DOCKER_IMG_RUTIL_VM_API_VERSION
export DOCKER_IMG_RUTIL_VM_LATEST=$DOCKER_IMG_RUTIL_VM:latest

# export DOCKER_IMG_RUTIL_VM_WSPROXY=$DOCKER_REGISTRY_HOME/ititcloud/rutil-vm-wsproxy
export DOCKER_IMG_RUTIL_VM_WSPROXY=rutil-vm-wsproxy
export DOCKER_IMG_RUTIL_VM_WSPROXY_CURRENT=$DOCKER_IMG_RUTIL_VM_WSPROXY:$DOCKER_IMG_RUTIL_VM_API_VERSION
export DOCKER_IMG_RUTIL_VM_WSPROXY_LATEST=$DOCKER_IMG_RUTIL_VM_WSPROXY:latest

# Engine
export OVIRT_ENGINE_LOG=/var/log/ovirt-engine/engine.log
export OVIRT_ENGINE_LOG_CONFIG=/usr/share/ovirt-engine/services/ovirt-engine/ovirt-engine.xml.in

function dp() {
  docker ps -a
}
#
# docker logs -f <컨테이너명>
#
function dl() {
  docker logs -f $1
}
function di() {
  docker images
}
function dx() {
  docker exec -it $1 /bin/sh
}
#
# docker rmi <이미지>
#
function drmi() {
  docker rmi $1
}

function startDk() {
  docker compose -f "$RUTIL_VM_HOME/$DOCKER_COMPOSE_FILENAME" up -d
}

function stopDk() {
  docker compose -f "$HOME/rutil-vm/$DOCKER_COMPOSE_FILENAME" down
}

function loadDkb() {
  docker rmi $DOCKER_IMG_RUTIL_VM_API $DOCKER_IMG_RUTIL_VM_API_CURRNET;
  docker load -i $1;
  docker tag $DOCKER_IMG_RUTIL_VM_API_CURRENT $DOCKER_IMG_RUTIL_VM_API_LATEST;
}

function loadDkf() {
  docker rmi $DOCKER_IMG_RUTIL_VM $DOCKER_IMG_RUTIL_VM_CURRNET;
  docker load -i $1;
  docker tag $DOCKER_IMG_RUTIL_VM_CURRENT $DOCKER_IMG_RUTIL_VM_LATEST;
}

function loadDkw() {
  docker rmi $DOCKER_IMG_RUTIL_VM_WSPROXY $DOCKER_IMG_RUTIL_VM_WSPROXY_CURRENT;
  docker load -i $1;
  docker tag $DOCKER_IMG_RUTIL_VM_WSPROXY_CURRENT $DOCKER_IMG_RUTIL_VM_WSPROXY_LATEST;
}

function enginePki() {
  cat $PATH_ENGINE_ID_RSA
}

function enginePub() {
  curl -k -X GET "https://$(hostname -i):8443/ovirt-engine/services/pki-resource?resource=engine-certificate&format=OPENSSH-PUBKEY" 
}

function engineLog() {
  tail -200f $OVIRT_ENGINE_LOG
}

function engineLogConfig() {
  vi $OVIRT_ENGINE_LOG_CONFIG
}

function tailOvirtLog() {
  tail -200f /var/log/ovirt-engine/engine.log
}